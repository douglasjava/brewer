# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
## Keep the connection alive if idle for a long time (needed in production)

app.datasource.jdbc-url = jdbc:mysql://localhost:3306/brewer?useSSL=false
app.datasource.username = root
app.datasource.password = 12345
app.datasource.testWhileIdle = true
app.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager).
## Show or not log for each sql query
## Hibernate ddl auto (create, create-drop, update): with "update" the database
## schema will be automatically updated accordingly to java entities found in
## the project
## Naming strategy
## Allows Hibernate to generate SQL optimized for a particular DBMS

spring.jpa.show-sql = false
spring.jpa.hibernate.ddl-auto = none
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.show-sql: false

# ===============================
# = Thymeleaf
# ===============================
spring.thymeleaf.mode=HTML

# ===============================
# = logging
# ===============================
logging.pattern.console=%d{dd-MM-yyyy hh:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug